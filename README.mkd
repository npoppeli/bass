Bass
====

Bass is a static website generator (Bass=Build A Static Site). It turns a
collection of content pages, assets (PNG, CSS, JS etc.) and templates into a
static website, i.e. a website consisting only of directories, HTML pages and
the same assets. Bass is distributed under the MIT license (see the LICENSE
file for more details).

The idea is that you don't need a content-management system on the server to
generate pages dynamically: you generate the content, upload it to the server,
and repeat this process when something has changed. That way, there is no need
to install complex software on the server, with the associated maintenance
effort (software upgrade, backup) and security issues.

The design of Bass borrows ideas from [Wok][wok] and other static site
generators (see [overview][static]). Before I created Bass, I used Wok for
about a year, created two websites with it, and also looked at alternatives.
During that year I noticed several drawbacks, which led to the development of Bass.

Bass includes the features I missed in Wok and other static site generators.
More importantly: it gives the user complete freedom in organizing the input
directory, considers this organization as meaningful, and therefore preserves
it in the site tree.  With organization of the input directory I mean: (1) the
structure of the tree of files and sub-directories in the input directory, and
(2) the names of files and sub-directories. This concept was borrowed from
[Wintersmith][wintersmith].

Wok completely ignores the structure of the input directory, and uses the
metadata of the pages (category) to create the structure of the site
tree. Other static site generators are designed primarily for blog sites, and
use an input directory with a fixed structure.

Bass also add certain useful features that I found useful.  Some examples of
these features are: flexible pagination, use of template engines other than
Jinja, ignoring specified files in the content directory (e.g. Emacs backup
files).


[wok]: https://github.com/mythmon/wok
[static]: https://www.staticgen.com/
[wintersmith]: https://github.com/jnordberg/wintersmith

Documentation
-------------

Documentation is in the `doc` directory.
An example site is in the `test` directory.

Installation
------------

The recommended way to install Bass is from the [Python Package Index][pypi]
with this command: `sudo pip install bass`.

[pypi]: http://pypi.python.org/pypi

### Dependencies

All dependencies are available through pip. Although optional, you should at least
install one of the following three tools:

- Markdown (Markdown2 is even better)
- docutils
- Textile

If you install with pip, they will be installed for you.

#### Required

-   `pyyaml`
-   `chameleon`

#### Optional

-   `Markdown` or `Markdown2`, for rendering Markdown documents.
-   `docutils`, for rendering reStructuredText documents.
-   `Textile`, for rendering Textile documents.
-   `WebOb`, for a more advanced web server.

Usage
-----

To use Bass, go to the project directory (the directory where the input files
and generated site will be located), and run the command `bass -c` or `bass --create`. This will
create a basic directory structure and corresponding configuration file. You
can change the names of the directories, provided you apply the changes in the
configuration file as well.

Put your content in the input directory (default: `input`). Build the site with
`bass -b` or `bass --build`. If you want to see debugging information, use
`bass -b -d` or `bass --build --debug`.

If you add the option `-s` or `--serve`, Bass will generate the site as usual,
and then start a simple HTTP server on port 8080. This test server is intended solely
for local testing of the site during the development phase.

If the Python package `webob` is available, a slightly more advanced server
(WSGI) is made available. This server checks for changes to the `content` and
`layout` directories (see below) whenever a page is requested. If it detects a
change in either of these directories, the site is regenerated before the page
is returned.